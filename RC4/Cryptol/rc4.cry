swap : [256][8] -> [8] -> [8] -> [256][8]
swap state i j = [ state @ ( if n == i then j else
                     if n -- j then i else
                     n)
                   | n <- [0..255]
                   ]

ksa_step : [inf][8] -> [8] -> [8] -> [256][8] -> ([8],[256][8])
ksa_step  key i j state = (j', swap state i j')
            where j' = j + state@i + key@j

ksa : [inf][8] -> [256][8]
ksa key = (go ! 0).1 where
    go : [257]([8],[256][8])
    go = [(0,[0..255])] # [ ksa_step key i j s
                          | i <- [0..255]
                          | (j,s) <- go
                          ]

ks_step : [8]-> [8] -> [256][8] -> ([8,[256][9],[8])
ks_step i j s = (j', s', s@(s@i + s@j'))
    where j' = j + s@i
          s' = swap s i j'

ks key = [ k | (_,_,k) <- drop'{1} go ] where
  go = [(0, ksa key', 0)] # [ks_step i j s
                            | i <- loop
                            | (j,s,k) <- go
                            ]

  key' = key # key'
  loop = [1..255] # [0] # loop
